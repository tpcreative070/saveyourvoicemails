plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "co.tpcreative.saveyourvoicemails"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            develop {
                applicationIdSuffix ".develop"
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/io.netty.versions.properties'
    }

    dexOptions {
        preDexLibraries = false
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.legacy:legacy-preference-v14:$legacyPreferenceV14"
    implementation "androidx.cardview:cardview:$cardview"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.multidex:multidex:$appMultidex"
    /*Review In app*/
    implementation "com.google.android.play:core:$playCore"
    implementation "com.google.android.play:core-ktx:$playCoreKT"

    /*Support grant permission*/
    implementation "com.karumi:dexter:$dexter"

    // Dependency for Google Sign-In
    implementation "com.google.android.gms:play-services-auth:$servicesAuth"
    // Dependencies for the REST API example
    implementation "com.google.api-client:google-api-client-android:$googleAPIClientAndroid"
    /*Google drive*/
    implementation "com.google.apis:google-api-services-drive:$googleAPIServicesDrive"
    implementation "com.google.android.gms:play-services-drive:$playServicesDrive"
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation "com.google.firebase:firebase-analytics:$firebaseAnalytics"
    implementation "com.google.android.gms:play-services-basement:$playServicesBasement"
    /*Gson*/
    implementation "com.google.code.gson:gson:$gson"
    /*Material Design*/
    /*Retrofit and RXJava 2*/
    implementation "com.jakewharton.timber:timber:$timber"
    implementation "com.squareup.retrofit2:retrofit:$appRetrofit"
    implementation "com.squareup.retrofit2:converter-gson:$appRetrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$appRetrofit"
    /*Exoplayer video*/
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer"
    /*Adding detect extension files*/
    implementation "commons-io:commons-io:$commonsIO"
    /*In app purchase*/
    //implementation project(':checkoutlibrary')
    implementation "com.anjlab.android.iab.v3:library:$v3Library"
    /*Even Bus*/
    implementation "org.greenrobot:eventbus:$eventbus"
    /*Animation textview*/
    implementation "me.grantland:autofittextview:$autoFittextView"
    implementation "commons-codec:commons-codec:$commonsCodec"
    implementation "com.tapadoo.android:alerter:$androidAlerter"
    /*Finger print*/
    implementation "co.infinum:goldfinger:$goldFinger"
    /*Kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.core:core-ktx:$kotlin_core_version"
    implementation "androidx.room:room-runtime:$appRoomVersion"
    implementation "com.google.guava:listenablefuture:$listenablefuture"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"
    implementation "android.arch.lifecycle:extensions:$lifecycleExtensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleLivedataKTX"
    implementation "id.zelory:compressor:$compressor"
    implementation "io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:$ectionedRecyclerViewAdapter"
    implementation "androidx.security:security-crypto:$securityCrypto"
    implementation "androidx.media:media:$androidxMedia"


    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$daggerAndroid"
    implementation "com.google.dagger:dagger-android-support:$daggerAndroidSupport"
    kapt "com.google.dagger:dagger-android-processor:$daggerAndroidProcessor"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerCompiler"
    kapt "com.google.dagger:dagger-compiler:$daggerCompiler"

    implementation project(":data")
    implementation project(":domain")
    implementation project(":presentation")
}

/*Resolved duplicated for Google api client*/
configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}